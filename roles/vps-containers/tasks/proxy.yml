- name: create directory for Traefik
  file:
    path: /srv/containers/traefik/
    state: directory
    recurse: yes

- name: create an empty acme.json
  file:
    path: /srv/containers/traefik/acme.json
    state: touch
    mode: "600"

- name: copy static Traefik config
  copy:
    src: "{{ item }}"
    dest: "/srv/containers/traefik/{{ item }}"
  notify:
    - restart Traefik container
  loop:
    - traefik.toml
    - traefik-dynamic.toml

- name: create Traefik container
  docker_container:
    name: traefik
    image: "traefik:latest"
    pull: yes
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
    volumes:
      - "/srv/containers/traefik/traefik.toml:/etc/traefik/traefik.toml:ro"
      - "/srv/containers/traefik/traefik-dynamic.toml:/etc/traefik/traefik-dynamic.toml:ro"
      - "/srv/containers/traefik/acme.json:/acme.json"
      - "/etc/localtime:/etc/localtime:ro"
      - "/var/run/docker.sock:/var/run/docker.sock"
    labels:
      traefik.http.routers.dashboard.rule: "Host(`fkoehler.xyz`)"
      traefik.http.routers.dashboard.service: "api@internal"
      traefik.http.routers.dashboard.tls: "true"
      traefik.http.routers.dashboard.tls.certresolver: "letsencrypt"
      traefik.http.routers.dashboard.middlewares: "auth"
      traefik.http.middlewares.auth.basicauth.users: "{{ traefik_dashboard_auth }}"
    command: --providers.docker
    networks:
      - name: containers
    networks_cli_compatible: yes
    restart_policy: "unless-stopped"

- name: open ports for Traefik
  ufw:
    rule: allow
    port: "{{ item | int }}"
  loop:
    - 80
    - 443
