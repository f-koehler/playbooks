- name: create directories for InfluxDB
  file:
    path: /srv/containers/influxdb/data
    state: directory
    recurse: yes

- name: install python module for InfluxDB
  package:
    name: python-influxdb
    state: "present"

- name: create InfluxDB container
  docker_container:
    name: influxdb
    image: "influxdb:latest"
    env:
      INFLUXDB_HTTP_AUTH_ENABLED: "TRUE"
      INFLUXDB_ADMIN_USER: "{{ influxdb_user_admin }}"
      INFLUXDB_ADMIN_PASSWORD: "{{ influxdb_password_admin }}"
    volumes:
      - "/srv/containers/influxdb/data:/var/lib/influxdb"
    ports:
      - "8086:8086"
    networks:
      - name: containers
    networks_cli_compatible: yes
    restart_policy: "unless-stopped"

- name: create directories for Telegraf
  file:
    path: /srv/containers/telegraf/config
    state: directory
    recurse: yes

- name: create Telegraf InfluxDB DB
  influxdb_database:
    login_username: "{{ influxdb_user_admin }}"
    login_password: "{{ influxdb_password_admin }}"
    database_name: "{{ influxdb_db_telegraf }}"

- name: create Telegraf InfluxDB user
  influxdb_user:
    user_name: "{{ influxdb_user_telegraf }}"
    user_password: "{{ influxdb_password_telegraf }}"
    login_username: "{{ influxdb_user_admin }}"
    login_password: "{{ influxdb_password_admin }}"
    grants:
      - database: "{{ influxdb_db_telegraf }}"
        privilege: "ALL"

- name: copy Telegraf config
  copy:
    src: telegraf.conf
    dest: /srv/containers/telegraf/config/telegraf.conf
  notify:
    - restart Telegraf container

- name: create Telegraf container
  docker_container:
    name: telegraf
    image: "telegraf:latest"
    volumes:
      - "/srv/containers/telegraf/config/telegraf.conf:/etc/telegraf/telegraf.conf:ro"
    networks:
      - name: containers
    networks_cli_compatible: yes
    restart_policy: "unless-stopped"

- name: create Grafana InfluxDB user
  influxdb_user:
    user_name: "{{ influxdb_user_grafana }}"
    user_password: "{{ influxdb_password_grafana }}"
    login_username: "{{ influxdb_user_admin }}"
    login_password: "{{ influxdb_password_admin }}"
    grants:
      - database: "{{ influxdb_db_telegraf }}"
        privilege: "READ"

- name: create Grafana postgresql user
  postgresql_user:
    name: "{{ postgres_user_grafana }}"
    password: "{{ postgres_password_grafana }}"
    login_user: "{{ postgres_user_root }}"
    login_password: "{{ postgres_password_root }}"
    login_host: "127.0.0.1"

- name: create Nextcloud database
  postgresql_db:
    name: "{{ postgres_db_grafana }}"
    owner: "{{ postgres_user_grafana }}"
    encoding: UTF-8
    login_user: "{{ postgres_user_root }}"
    login_password: "{{ postgres_password_root }}"
    login_host: "127.0.0.1"

- name: create directories for grafana
  file:
    path: "/srv/containers/grafana/data"
    state: directory
    recurse: yes
    owner: "472"

- name: create Grafana container
  docker_container:
    name: grafana
    image: "grafana/grafana:latest"
    networks:
      - name: containers
    networks_cli_compatible: yes
    restart_policy: "unless-stopped"
    env:
      GF_DEFAULT_APP_MODE: "production"
      GF_SERVER_DOMAIN: "grafana.fkoehler.xyz"
      GF_SERVER_ROOT_URL: "https://grafana.fkoehler.xyz/"
      GF_DATABASE_TYPE: "postgres"
      GF_DATABASE_HOST: "postgres:5432"
      GF_DATABASE_NAME: "{{ postgres_db_grafana }}"
      GF_DATABASE_USER: "{{ postgres_user_grafana }}"
      GF_DATABASE_PASSWORD: "{{ postgres_password_grafana }}"
      GF_SECURITY_ADMIN_USER: "{{ grafana_user_admin }}"
      GF_SECURITY_ADMIN_PASSWORD: "{{ grafana_password_admin }}"
      GF_SECURITY_SECRET_KEY: "{{ grafana_secret_key }}"
    volumes:
      - "/srv/containers/grafana/data:/var/lib/grafana"