---
- name: Create paperless group
  become: true
  register: paperless_group_result
  ansible.builtin.group:
    name: "{{ paperless_group }}"

- name: Create paperless user
  become: true
  register: paperless_user_result
  ansible.builtin.user:
    name: "{{ paperless_user }}"
    group: "{{ paperless_group }}"
    state: present
    create_home: true
    home: "{{ paperless_home }}"

- name: Set uid/gid fact
  ansible.builtin.set_fact:
    paperless_gid: "{{ paperless_group_result.gid }}"
    paperless_uid: "{{ paperless_user_result.uid }}"

- name: Enable linger for paperless user
  become: true
  ansible.builtin.command:
    cmd: loginctl enable-linger "{{ paperless_user }}"
    creates: /var/lib/systemd/linger/{{ paperless_user }}

- name: Create quadlet directory
  become: true
  become_user: "{{ paperless_user }}"
  ansible.builtin.file:
    path: "{{ directory }}"
    state: directory
    owner: "{{ paperless_user }}"
    group: "{{ paperless_group }}"
    mode: "0755"
  loop_control:
    loop_var: directory
  loop:
    - "{{ paperless_home }}/.config"
    - "{{ paperless_home }}/.config/containers"
    - "{{ paperless_home }}/.config/containers/systemd"

- name: Generate quadlet files
  become: true
  become_user: "{{ paperless_user }}"
  notify: Restart paperless containers
  register: paperless_quadlet_result
  ansible.builtin.template:
    src: "{{ template }}"
    dest: "{{ paperless_home }}/.config/containers/systemd/{{ template }}"
    owner: "{{ paperless_user }}"
    group: "{{ paperless_group }}"
    mode: "0644"
  loop_control:
    loop_var: template
  loop:
    - broker.container
    - gotenberg.container
    - paperless.container
    - paperless.network
    - paperless.pod
    - tika.container

- name: Generate environment file
  become: true
  become_user: "{{ paperless_user }}"
  notify: Restart paperless containers
  register: paperless_env_result
  ansible.builtin.template:
    src: "paperless.env"
    dest: "{{ paperless_home }}/.env"
    owner: "{{ paperless_user }}"
    group: "{{ paperless_group }}"
    mode: "0600"

- name: Reload systemd daemon
  become: true
  become_user: "{{ paperless_user }}"
  when: paperless_quadlet_result.changed or paperless_env_result.changed
  ansible.builtin.systemd:
    daemon_reload: true
    scope: user

- name: Validate quadlet files
  become: true
  become_user: "{{ paperless_user }}"
  changed_when: false
  ansible.builtin.command:
    cmd: /usr/lib/podman/quadlet -dryrun -user

- name: Create volumes
  become: true
  notify: Restart paperless containers
  ansible.builtin.file:
    path: "{{ volume }}"
    state: directory
    mode: "0700"
    owner: "{{ paperless_user }}"
    group: "{{ paperless_group }}"
  loop_control:
    loop_var: volume
  loop:
    - "{{ paperless_volume_data }}"
    - "{{ paperless_volume_media }}"
    - "{{ paperless_volume_consume }}"
    - "{{ paperless_volume_export }}"
    - "{{ paperless_volume_redisdata }}"

- name: Enable paperless containers
  become: true
  become_user: "{{ paperless_user }}"
  ansible.builtin.systemd:
    name: "{{ item }}"
    state: started
    enabled: true
    scope: user
  loop:
    - paperless.service
    - broker.service
    - tika.service
    - gotenberg.service
    - paperless-pod.service

- name: Expose paperless via Tailscale
  ansible.builtin.include_role:
    name: tailscale-serve-quadlet
  vars:
    tailscale_serve_quadlet_user: "{{ paperless_user }}"
    tailscale_serve_quadlet_group: "{{ paperless_group }}"
    tailscale_serve_quadlet_pod_name: "paperless"
    tailscale_serve_quadlet_service_name: "paperless"
    tailscale_serve_quadlet_service_port: 8000
    tailscale_serve_quadlet_hostname: "{{ paperless_hostname }}"
    tailscale_serve_quadlet_oauth_client_secret: "{{ tailscale_oauth_client_secret }}"
