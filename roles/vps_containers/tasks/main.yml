- name: install certbot
  package:
    name: certbot

- name: copy docker-compose files
  copy:
    src: docker-compose-files
    dest: "~"
    follow: yes
  notify: restart containers

- name: symlink private key
  file:
    path: "~/docker-compose-files/{{ item }}/cert.key"
    src: "/etc/letsencrypt/live/fkoehler.xyz/privkey.pem"
    state: link
  loop:
    - vps
    - blog

- name: symlink certificate
  file:
    path: "~/docker-compose-files/{{ item }}/cert.pem"
    src: "/etc/letsencrypt/live/fkoehler.xyz/fullchain.pem"
    state: link
  loop:
    - vps
    - blog

- name: symlink chain (OCSP stapling)
  file:
    path: "~/docker-compose-files/{{ item }}/chain.pem"
    src: "/etc/letsencrypt/live/fkoehler.xyz/chain.pem"
    state: link
  loop:
    - vps
    - blog

- name: generate env file for vps
  ansible.builtin.template:
    src: .env.j2
    dest: "~/docker-compose-files/vps/.env"

- name: create/start containers
  community.docker.docker_compose:
    project_src: "~/docker-compose-files/vps"
    pull: yes
    build: yes

- name: create/start containers (blog)
  community.docker.docker_compose:
    project_src: "~/docker-compose-files/blog"
    pull: yes
    build: yes

- name: flush handlers
  meta: flush_handlers

- name: copy blog deploy script
  ansible.builtin.copy:
    src: deploy_blog
    dest: /usr/local/bin/deploy_blog
    mode: u=rwx,g=rx,o=rx

- name: config sudo for blog deploy script
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    line: "fkoehler ALL=(ALL) NOPASSWD: /usr/local/bin/deploy_blog"
    owner: root
    group: root
    mode: "440"

- name: install rsync
  package:
    name: rsync
