- name: create postgres container
  docker_container:
    name: nextcloud_db
    image: "postgres:latest"
    pull: yes
    env:
      POSTGRES_USER: "{{ nextcloud_db_user }}"
      POSTGRES_PASSWORD: "{{ nextcloud_db_password }}"
      POSTGRES_DB: "{{ nextcloud_db_name }}"
    volumes:
      - "/srv/containers/nextcloud_db/data:/var/lib/postgresql/data"
    networks:
      - name: containers
    restart_policy: "unless-stopped"

- name: create Nextcloud container
  docker_container:
    name: nextcloud
    image: "nextcloud:latest"
    pull: yes
    env:
      NEXTCLOUD_ADMIN_USER: "{{ nextcloud_admin_user }}"
      NEXTCLOUD_ADMIN_PASSWORD: "{{ nextcloud_admin_password }}"
      NEXTCLOUD_TRUSTED_DOMAINS: "{{ nextcloud_trusted_domains }}"
      POSTGRES_DB: "{{ nextcloud_db_name }}"
      POSTGRES_USER: "{{ nextcloud_db_user }}"
      POSTGRES_PASSWORD: "{{ nextcloud_db_password }}"
      POSTGRES_HOST: "nextcloud_db"
      OVERWRITEPROTOCOL: "https"
    labels:
      traefik.http.routers.nextcloud.rule: "Host(`nextcloud.fkoehler.xyz`)"
      traefik.http.routers.nextcloud.tls: "true"
      traefik.http.routers.nextcloud.tls.certresolver: "letsencrypt"
      traefik.http.routers.nextcloud.middlewares: "customHeaders, nextcloud-dav"
      traefik.http.middlewares.nextcloud-dav.redirectRegex.permanent: "true"
      traefik.http.middlewares.nextcloud-dav.redirectRegex.replacement: "https://${1}/remote.php/dav/"
      traefik.http.middlewares.nextcloud-dav.redirectRegex.regex: "https://(.*)/.well-known/(card|cal)dav"
    volumes:
      - "/srv/containers/nextcloud:/var/www/html/"
    networks:
      - name: containers
    restart_policy: "unless-stopped"
