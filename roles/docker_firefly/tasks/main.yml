- name: create docker network for firefly
  docker_network:
    name: firefly

- name: create DB container for firefly
  docker_container:
    name: firefly_db
    image: "postgres:13-alpine"
    pull: yes
    container_default_behavior: no_defaults
    network_mode: default
    env:
      POSTGRES_USER: "{{ firefly_db_user }}"
      POSTGRES_PASSWORD: "{{ firefly_db_password }}"
      POSTGRES_DB: "{{ firefly_db_name }}"
    volumes:
      - "/srv/containers/firefly_db/data:/var/lib/postgresql/data"
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    networks:
      - name: firefly
    networks_cli_compatible: yes
    restart_policy: "unless-stopped"

- name: create firefly container
  docker_container:
    name: firefly
    image: "jc5x/firefly-iii:latest"
    pull: yes
    container_default_behavior: no_defaults
    network_mode: default
    ports:
      - "0.0.0.0:8080:8080"
    env:
      APP_KEY: "{{ firefly_app_key }}"
      DB_HOST: "firefly_db"
      DB_PORT: "5432"
      DB_CONNECTION: "pgsql"
      DB_DATABASE: "{{ firefly_db_name }}"
      DB_USERNAME: "{{ firefly_db_user }}"
      DB_PASSWORD: "{{ firefly_db_password }}"
    volumes:
      - "/srv/containers/firefly/upload:/var/www/html/storage/upload"
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    networks:
      - name: firefly
    networks_cli_compatible: yes
    restart_policy: "unless-stopped"

- name: create firefly csv importer container
  docker_container:
    name: firefly_csv_importer
    image: "fireflyiii/csv-importer:latest"
    pull: yes
    container_default_behavior: no_defaults
    network_mode: default
    ports:
      - "0.0.0.0:8081:8080"
    env:
      FIREFLY_III_URI: "http://firefly:8080"
      FIREFLY_III_ACCESS_TOKEN: "{{ firefly_csv_importer_access_token }}"
    volumes:
      - "/srv/containers/firefly/upload:/var/www/html/storage/upload"
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    networks:
      - name: firefly
    networks_cli_compatible: yes
    restart_policy: "unless-stopped"
